// Common mixins
@mixin icon-colors($color-prefix) {
  color: var(--color-#{$color-prefix});
  fill: var(--color-#{$color-prefix});
  stroke: var(--color-#{$color-prefix});
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Component types that share styles
$component-types: (
  symbolh,
  symbolChild,
  stateGroup,
  instance,
  instanceChild,
  immutableFrame,
  highlight,
  module,
  moduleChild,
  sectionsCollapsed,
  layerListRow,
  "widget-",
  codeComponent,
  "stamp-"
);

.object_row {
  // Row base styles
  &--row {
    @each $type in $component-types {
      &.object_row--#{$type} {
        // Selected states
        &.object_row--selected {
          .object_row--layerIcon {
            @include icon-colors(icon-component);
          }

          &.object_row--expanded,
          &.object_row--hovered {
            &:after {
              border-radius: var(--radius-medium) var(--radius-medium) 0 0;
              border-bottom: 4px solid var(--color-bg-selected-secondary);
            }
          }
        }

        // Hover and disabled states
        &:hover,
        &.object_row--hovered {
          &:after {
            margin-bottom: -1px;
            border-color: var(--color-border-component);
          }
        }

        &.object_row--disabled {
          &, .object_row--layerIcon {
            @include icon-colors(text-component-tertiary);
            --color-icon: var(--color-icon-component-tertiary);
          }

          .object_row--pill {
            border-color: var(--color-text-component-tertiary);
          }
        }

        // Parent selected state
        &.object_row--parentSelected {
          background-color: var(--color-bg-selected-secondary);

          [data-fpl-version="ui3"] & {
            background-color: unset;
          }
        }

        .object_row--layerIcon {
          @include icon-colors(icon-component-tertiary);
          --color-icon: var(--color-icon-component-tertiary);
          --color-icon-tertiary: var(--color-icon-component-tertiary);
        }
      }
    }

    // Parent selected styles
    &.object_row--parentSelected {
      background-color: var(--color-bg-selected-secondary);
      border-color: transparent;

      &.object_row--disabled {
        &, .object_row--layerIcon {
          @include icon-colors(text-onselected-tertiary);
          --color-icon: var(--color-icon-onselected-tertiary);
        }
      }

      [data-fpl-version="ui3"] & {
        background-color: unset;

        &:before {
          content: "";
          position: absolute;
          display: block;
          background-color: var(--color-bg-selected-secondary);
          width: calc(100% - 20px);
          margin-left: 12px;
          border-radius: 0 0 var(--radius-medium) var(--radius-medium);
          height: calc(100% + var(--radius-medium));
          top: calc((var(--spacer-1) + var(--radius-medium)) * -1);
          z-index: -2;
        }
      }
    }
  }

  // Layout components
  &--indents {
    display: flex;
    position: relative;
    height: 100%;
    flex-shrink: 0;
  }

  &--indent {
    @include flex-center;
    width: 16px;
    height: 100%;
    box-sizing: border-box;
    flex-shrink: 0;
  }

  &--mask {
    @include icon-colors(icon-tertiary);
    width: 16px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;

    .object_row--layerIcon path {
      stroke: none !important;
    }

    &.object_row--reversed {
      transform: scaleY(-1);
    }

    &.object_row--stickyMask {
      position: sticky;
      right: 32px;
      margin-left: -16px;
      margin-right: 0 !important;
    }
  }

  // Content and actions
  &--rowContent,
  &--rowContentSticky {
    display: flex;
    align-items: center;
    height: 100%;
  }

  &--rowContentSticky {
    position: sticky;
    left: 0;
    width: 0;
  }

  &--rowActions {
    height: 100%;
    width: 0;
    display: flex;
    flex-shrink: 0;
    align-items: center;

    &Sticky {
      position: sticky;
      right: 0;
      display: flex;
      width: 0;
    }

    &Container {
      display: flex;
      transform: translate(-100%);
      pointer-events: auto;
    }
  }

  // Icons and visibility
  &--layerIcon {
    @include flex-center;
    width: 16px;
    height: 100%;
    flex-shrink: 0;
    @include icon-colors(icon-tertiary);
    --color-icon: var(--color-icon-tertiary);

    & + & {
      margin-left: 8px;
    }
  }

  &--expandCaret {
    @include icon-colors(icon-tertiary);
    position: absolute;
    right: 0;
    visibility: hidden;

    &.object_row--stickyCaret {
      position: sticky;
      right: 32px;
      margin-left: -16px;
      margin-right: 0 !important;
    }
  }

  // Text elements
  &--input {
    flex-grow: 1;
    min-width: 0;
    background-color: var(--color-bg);
    font-feature-settings: "ss02" on, "liga" on, "calt" on;
    text-align: left;

    &, &:not(:disabled):focus {
      height: 24px;
      margin-right: 8px;
    }
  }

  &--rowText {
    display: flex;
    line-height: 32px;
    height: 32px;
    padding: 0 8px;
    width: calc(100% - 16px);
    flex-shrink: 1;
    white-space: pre;
    font-feature-settings: "ss02" on, "liga" on, "calt" on;
    text-align: left;
  }

  // Pills and icons
  &--pill {
    height: 16px;
    display: flex;
    align-items: center;
    font-weight: 500;
    font-size: 9px;
    box-sizing: border-box;
    margin-left: 6px;
    padding: 1px 3px;
    border: 1px solid;
    border-radius: 3px;
  }

  // Visibility controls
  &--lockIcon,
  &--visibleIcon,
  &--renameLayersButton {
    visibility: hidden;
    display: flex;
  }

  &--visibleIcon {
    margin: 0 12px 0 4px;
  }

  &--disabled,
  &--locked {
    .object_row--rowActions {
      width: var(--row-actions-width);
    }
  }

  &--disabled .object_row--visibleIcon,
  &--locked .object_row--lockIcon {
    visibility: visible;
  }
}

// UI3 specific overrides
[data-fpl-version="ui3"] {
  .object_row {
    &--expandCaret {
      --color-icon: var(--color-icon-tertiary);
      stroke: none;
    }

    &--pill {
      font: {
        family: var(--text-body-medium-font-family);
        size: var(--text-body-medium-font-size);
        weight: var(--text-body-medium-font-weight);
      }
      letter-spacing: var(--text-body-medium-letter-spacing);
      line-height: var(--text-body-medium-line-height);
      border-radius: var(--radius-medium);
      padding: 0 var(--spacer-1);
      margin-left: var(--spacer-1);
    }
  }
}

// Layer panel hover state
.layerPanel:hover .object_row--expandCaret {
  visibility: visible;
}
